<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd 
           http://www.springframework.org/schema/aop 
	       http://www.springframework.org/schema/aop/spring-aop.xsd ">

	<!-- Activates various annotations to be detected in bean classes -->
	<aop:config proxy-target-class="true" />
	<context:annotation-config />
	<!-- Enables Method Security and Expression-based access control -->
	<security:global-method-security
		pre-post-annotations="enabled">
		<!-- Enables custom expression handler -->
		<security:expression-handler ref="expressionHandler" />
	</security:global-method-security>

	<beans:bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="roleHierarchy" ref="roleHierarchy" />
	</beans:bean>

	<http pattern="/auth/login" security="none" />
	<http pattern="/resources/**" security="none" />
	<http pattern="/api/**" security="none" />
	<http pattern="/application/run/**" security="none" />
	<!-- <http pattern="/mobile/**" security="none" /> -->

	<security:http auto-config="true" use-expressions="true"
		pattern="/**">
		<security:http-basic />
		<security:access-denied-handler
			error-page="/auth/denied" />
		<security:intercept-url pattern="/user/**"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/**"
			access="isAuthenticated()" />

		<security:form-login login-page="/auth/login"
			authentication-failure-url="/auth/login?error=true" />
		<security:logout invalidate-session="true"
			logout-success-url="/auth/login" logout-url="/auth/logout" />
	</security:http>



	<authentication-manager>
		<authentication-provider>
			<security:password-encoder ref="passwordEncoder" />
			<jdbc-user-service data-source-ref="dataSourceSecurity"
				users-by-username-query="SELECT username, password, enabled FROM users WHERE username=?"
				authorities-by-username-query="SELECT u.username, ur.role FROM users u, user_roles ur WHERE u.username = ur.username and u.username = ?" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="dataSourceSecurity" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="org.postgresql.Driver" />
		<beans:property name="url"
			value="jdbc:postgresql://${datasource.host}:${datasource.port}/${datasource.database}" />
		<beans:property name="username" value="${datasource.user}" />
		<beans:property name="password" value="${datasource.password}" />
	</beans:bean>


	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />


	<!-- http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/access/hierarchicalroles/RoleHierarchyImpl.html -->
	<beans:bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<beans:property name="hierarchy">
			<beans:value>
				ROLE_ADMIN > ROLE_USER
				ROLE_USER > ROLE_VISITOR
			</beans:value>
		</beans:property>
	</beans:bean>
</beans:beans>
